.ORIG x3000

LD R6, EMPTY
LD R0, MAXN
LD R1, PPAGES
AND R2, R2, #0
STR R2, R1, #0
ADD R1, R1, #1
ADD R0, R0, #-1
BRp #-5

; ; TEST1
; GETC
; LEA R1, TEMP
; STR R0, R1, #0
; GETC
; STR R0, R1, #1
; JSR ATOI
; HALT

; ; TEST2
; AND R0, R0, #0
; ADD R0, R0, #15
; ADD R0, R0, #15
; ADD R0, R0, #10
; JSR ITOA
; HALT

GETC  ; get N
OUT
LEA R1, TEMP
STR R0, R1, #0
GETC   ; skip ENTER
OUT
LD R2, ENTER
NOT R2, R2
ADD R2, R2, #1
ADD R2, R2, R0
BRz START
STR R0, R1, #1
GETC
OUT

START JSR ATOI
ST R0, N
AND R0, R0, #0
LEA R2, TEMP
STR R0, R2, #0
STR R0, R2, #1
LD R4, N
LD R3, PPAGES
L0 GETC
OUT
STR R0, R2, #0
GETC
OUT
LD R1, SPACE
NOT R1, R1
ADD R1, R1, #1
ADD R1, R1, R0
BRnp #3
AND R0, R0, #0
STR R0, R2, #1
BRnzp #3
STR R0, R2, #1
GETC
OUT
JSR ATOI
STR R0, R3, #0
ADD R3, R3, #1

GETC
OUT
STR R0, R2, #0
GETC
OUT
LD R1, ENTER
NOT R1, R1
ADD R1, R1, #1
ADD R1, R1, R0
BRnp #3
AND R0, R0, #0
STR R0, R2, #1
BRnzp #3
STR R0, R2, #1
GETC
OUT
JSR ATOI
STR R0, R3, #0
ADD R3, R3, #1

ADD R4, R4, #-1
BRp L0

AND R0, R0, #0
JSR FLIP

; SUCCESS ;OUTPUT

HALT

; FLIP: flip each page and ckeck
; R0 is the page is dealing with
FLIP ADD R6, R6, #-1
STR R0, R6, #0
ADD R6, R6, #-1
STR R1, R6, #0
ADD R6, R6, #-1
STR R2, R6, #0
ADD R6, R6, #-1
STR R3, R6, #0
ADD R6, R6, #-1
STR R4, R6, #0
ADD R6, R6, #-1
STR R5, R6, #0
ADD R6, R6, #-1
STR R7, R6, #0

LD R1, N
NOT R1, R1
ADD R1, R1, #1
ADD R1, R1, R0
BRnp UNDONE
AND R2, R2, #0
ADD R2, R2, #1
ST R2, FINISH
BRnzp DONE


UNDONE LD R2, PPAGES 
LD R3, PUSED

ADD R1, R0, R0
ADD R2, R2, R1
LDR R4, R2, #0
ADD R3, R3, R4
LDR R5, R3, #0
BRp NEXT
ADD R5, R5, #1
STR R5, R3, #0
ADD R6, R6, #-1
STR R3, R6, #0
ADD R0, R0, #1
JSR FLIP
ADD R0, R0, #-1
LDR R3, R6, #0
ADD R6, R6, #1
LD R5, FINISH
BRp DONE
AND R5, R5, #0
STR R5, R3, #0

NEXT LDR R4, R2, #0
LDR R5, R2, #1
LD R3, PUSED
ADD R3, R3, R5
LDR R7, R3, #0
BRp DONE
STR R5, R2, #0
STR R4, R2, #1
ADD R7, R7, #1
STR R7, R3, #0
ADD R6, R6, #-1
STR R3, R6, #0
ADD R0, R0, #1
JSR FLIP
ADD R0, R0, #-1
AND R7, R7, #0
LDR R3, R6, #0
ADD R6, R6, #1
STR R7, R3, #0

DONE LDR R7, R6, #0
ADD R6, R6, #1
LDR R5, R6, #0
ADD R6, R6, #1
LDR R4, R6, #0
ADD R6, R6, #1
LDR R3, R6, #0
ADD R6, R6, #1
LDR R2, R6, #0
ADD R6, R6, #1
LDR R1, R6, #0
ADD R6, R6, #1
LDR R0, R6, #0
ADD R6, R6, #1
RET




; ATOI: convert string stored in TEMP to integer and store it in R0
ATOI ADD R6, R6, #-1
STR R1, R6, #0
ADD R6, R6, #-1
STR R2, R6, #0
ADD R6, R6, #-1
STR R3, R6, #0

AND R0, R0, #0
LEA R1, TEMP
LD R2, ZERO
NOT R2, R2
ADD R2, R2, #1
LDR R3, R1, #0
ADD R3, R3, R2
ADD R0, R0, R3

LDR R3, R1, #1
BRp #1
BRnzp EXIT1
ADD R3, R3, R2
AND R2, R2, #0
ADD R2, R2, #10
AND R1, R1, #0
L1 ADD R1, R1, R0
ADD R2, R2, -1
BRp L1
AND R0, R0, #0
ADD R0, R0, R1
ADD R0, R0, R3

EXIT1 LDR R3, R6, #0
ADD R6, R6, #1
LDR R2, R6, #0
ADD R6, R6, #1
LDR R1, R6, #0
ADD R6, R6, #1
RET

; ATOI: convert R0 into string and store it into TEMP
ITOA ADD R6, R6, #-1
STR R1, R6, #0
ADD R6, R6, #-1
STR R2, R6, #0

LD R1, ZERO
LEA R2, TEMP
L2 ADD R0, R0, #-10
BRn #4
ADD R1, R1, #1
ADD R0, R0, #-10
BRzp L2
STR R1, R2, #0
ADD R2, R2, #1
ADD R0, R0, #10
LD R1, ZERO
ADD R1, R1, R0
STR R1, R2, #0

LDR R2, R6, #0
ADD R6, R6, #1
LDR R1, R6, #0
ADD R6, R6, #1
RET

TEMP .BLKW 3
N .BLKW 1
FINISH .FILL x0000

EMPTY .FILL xFE00
MAXN .FILL x0032

ZERO .FILL x0030 ; ASCII code of 'ZERO'
ENTER .FILL x000A; ASCII code of 'ENTER'
SPACE .FILL x0020; ASCII code of 'SPACE'

PPAGES .FILL x4000
PUSED .FILL x401E

.END

.ORIG x4000
PAGES .BLKW 30
USED .BLKW 20
.END